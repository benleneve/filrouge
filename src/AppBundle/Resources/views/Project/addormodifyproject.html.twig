{% extends "AppBundle::layout.html.twig" %}

{% block breadcrumb %}
    {{parent()}} > 
        <a href="{{path('filrouge_project_list')}}">Projets</a> >
        <a href="{{path('filrouge_project_add')}}">Nouveau projet</a>
{% endblock breadcrumb %}

{% block left %}

    <div class="blockGeneral">
        <h2 class="icoProject">Projets</h2>
        <div class="blockContent">
            {{ form_start(projectForm) }}
                {{ form_errors(projectForm) }}
                <div>
                    <div>
                        <h4>{{ form_label(projectForm.name, "Nom du projet") }}</h4>
                        {{ form_widget(projectForm.name, { 'attr': {'class': ''} }) }}
                        {{ form_errors(projectForm.name) }}
                    </div>
                    <div>
                        <h4>{{ form_label(projectForm.name, "Etat du projet") }}</h4>
                        {{ form_widget(projectForm.status, { 'attr': {'class': ''} }) }}
                    </div>
                </div>
                <div>
                    <div>
                        <h4>{{ form_label(projectForm.startDate, "Date de début") }}</h4>
                        {{ form_widget(projectForm.startDate, { 'attr': {'class': ''} }) }}
                        {{ form_errors(projectForm.startDate) }}
                    </div>
                    <div>
                        <h4>{{ form_label(projectForm.endDate, "Date de fin") }}</h4>
                        {{ form_widget(projectForm.endDate, { 'attr': {'class': ''} }) }}
                        {{ form_errors(projectForm.endDate) }}
                    </div>
                </div>
                <h4>{{ form_label(projectForm.projectManager, "Chef de projet") }}</h4>
                {{ form_widget(projectForm.projectManager, { 'attr': {'class': ''} }) }}
                {{ form_errors(projectForm.projectManager) }}
                <h4>{{ form_label(projectForm.purpose, "Objectif") }}</h4>
                {{ form_widget(projectForm.purpose, { 'attr': {'class': ''} }) }}
                {{ form_errors(projectForm.purpose) }}
                <h4>{{ form_label(projectForm.description, "Description") }}</h4>
                {{ form_widget(projectForm.description, { 'attr': {'class': ''} }) }}
                
            {{ form_end(projectForm) }}
        </div>    
    </div>

<script src="//code.jquery.com/jquery-1.11.2.min.js"></script>
        
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#appbundle_project_steps');

    // On ajoute un lien pour ajouter une nouvelle étape
    var $addLink = $('<a href="#add_step" id="add_step" class="btnAction">Ajouter une étape</a>');
    $container.append($addLink);

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $addLink.click(function(e) {
      addStep($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addCategory($container);
    } else {
      // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire Step
    function addStep($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Etape n°' + (index+1))
          .replace(/__name__/g, index));
      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);
      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);
      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une étape
    function addDeleteLink($prototype) {
      // Création du lien
      $deleteLink = $('<a href="#">Supprimer</a>');
      // Ajout du lien
      $prototype.append($deleteLink);
      // Ajout du listener sur le clic du lien
      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>
    
{% endblock left %}

   